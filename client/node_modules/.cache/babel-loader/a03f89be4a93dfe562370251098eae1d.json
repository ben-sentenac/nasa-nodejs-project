{"ast":null,"code":"const API_URL = 'http://localhost:8000';\n\nasync function httpGetPlanets() {\n  // TODO: Once API is ready.\n  // Load planets and return as JSON.\n  const response = await fetch(`${API_URL}/planets`);\n  const planets = await response.json();\n  return planets;\n}\n\nasync function httpGetLaunches() {\n  // TODO: Once API is ready.\n  // Load launches, sort by flight number, and return as JSON.\n  const response = await fetch(`${API_URL}/launches`);\n  const fetchedLaunches = await response.json();\n  const launches = fetchedLaunches.sort((a, b) => a - b);\n}\n\nasync function httpSubmitLaunch(launch) {// TODO: Once API is ready.\n  // Submit given launch data to launch system.\n}\n\nasync function httpAbortLaunch(id) {// TODO: Once API is ready.\n  // Delete launch with given ID.\n}\n\nexport { httpGetPlanets, httpGetLaunches, httpSubmitLaunch, httpAbortLaunch };","map":{"version":3,"sources":["/home/ben09/ben09.dev/websites/NASA_PROJECT/client/src/hooks/requests.js"],"names":["API_URL","httpGetPlanets","response","fetch","planets","json","httpGetLaunches","fetchedLaunches","launches","sort","a","b","httpSubmitLaunch","launch","httpAbortLaunch","id"],"mappings":"AAAA,MAAMA,OAAO,GAAG,uBAAhB;;AACA,eAAeC,cAAf,GAAgC;AAC9B;AACA;AACA,QAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEH,OAAQ,UAAZ,CAA5B;AACA,QAAMI,OAAO,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAtB;AACA,SAAOD,OAAP;AACD;;AAED,eAAeE,eAAf,GAAiC;AAC/B;AACA;AACA,QAAMJ,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEH,OAAQ,WAAZ,CAA5B;AACA,QAAMO,eAAe,GAAG,MAAML,QAAQ,CAACG,IAAT,EAA9B;AACA,QAAMG,QAAQ,GAAGD,eAAe,CAACE,IAAhB,CAAqB,CAACC,CAAD,EAAGC,CAAH,KAAUD,CAAC,GAAGC,CAAnC,CAAjB;AACD;;AAED,eAAeC,gBAAf,CAAgCC,MAAhC,EAAwC,CACtC;AACA;AACD;;AAED,eAAeC,eAAf,CAA+BC,EAA/B,EAAmC,CACjC;AACA;AACD;;AAED,SACEd,cADF,EAEEK,eAFF,EAGEM,gBAHF,EAIEE,eAJF","sourcesContent":["const API_URL = 'http://localhost:8000';\nasync function httpGetPlanets() {\n  // TODO: Once API is ready.\n  // Load planets and return as JSON.\n  const response = await fetch(`${API_URL}/planets`);\n  const planets = await response.json();\n  return planets;\n}\n\nasync function httpGetLaunches() {\n  // TODO: Once API is ready.\n  // Load launches, sort by flight number, and return as JSON.\n  const response = await fetch(`${API_URL}/launches`);\n  const fetchedLaunches = await response.json();\n  const launches = fetchedLaunches.sort((a,b) =>  a - b)\n}\n\nasync function httpSubmitLaunch(launch) {\n  // TODO: Once API is ready.\n  // Submit given launch data to launch system.\n}\n\nasync function httpAbortLaunch(id) {\n  // TODO: Once API is ready.\n  // Delete launch with given ID.\n}\n\nexport {\n  httpGetPlanets,\n  httpGetLaunches,\n  httpSubmitLaunch,\n  httpAbortLaunch,\n};"]},"metadata":{},"sourceType":"module"}